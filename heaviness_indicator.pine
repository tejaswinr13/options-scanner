//@version=5
indicator("Heaviness % Reversal Indicator", shorttitle="H%", overlay=false)

// Input parameters
length = input.int(14, title="RSI Length", minval=1)
heaviness_length = input.int(20, title="Heaviness Calculation Length", minval=5)
volume_ma_length = input.int(10, title="Volume MA Length", minval=1)
buy_threshold = input.float(15.0, title="Buy Threshold (%)", minval=0, maxval=50)
sell_threshold = input.float(85.0, title="Sell Threshold (%)", minval=50, maxval=100)

// Calculate RSI
rsi = ta.rsi(close, length)

// Calculate Volume Ratio (current volume vs average)
volume_ma = ta.sma(volume, volume_ma_length)
volume_ratio = volume / volume_ma

// Calculate Price Momentum
price_change = ta.change(close, 1)
price_momentum = ta.sma(price_change, 5)

// Calculate Heaviness % 
// This combines RSI, volume pressure, and momentum
// Lower values = "lighter" (potential reversal/buy zone)
// Higher values = "heavier" (more selling pressure/sell zone)

// Invert RSI so low RSI = low heaviness (buy zone)
rsi_inverted = 100 - rsi

// Volume pressure - high volume during selling = higher heaviness
volume_pressure = volume_ratio > 1.5 ? (volume_ratio - 1) * 10 : 0

// Momentum component - negative momentum increases heaviness
momentum_factor = price_momentum < 0 ? math.abs(price_momentum) * 100 : 0

// Combine components (lower = better for buying)
heaviness_raw = (rsi_inverted + volume_pressure + momentum_factor) / 3
heaviness_percent = math.max(0, math.min(100, heaviness_raw))

// Smooth the heaviness calculation
heaviness_smooth = ta.ema(heaviness_percent, 3)

// Plot the main line
plot(heaviness_smooth, title="Heaviness %", color=color.new(color.blue, 0), linewidth=2)

// Add horizontal reference lines
hline(buy_threshold, "Buy Zone", color=color.new(color.green, 50), linestyle=hline.style_dashed)
hline(sell_threshold, "Sell Zone", color=color.new(color.red, 50), linestyle=hline.style_dashed)
hline(50, "Neutral", color=color.new(color.gray, 70), linestyle=hline.style_dotted)

// Color the background based on zones
bgcolor(heaviness_smooth <= buy_threshold ? color.new(color.green, 90) : na, title="Buy Zone BG")
bgcolor(heaviness_smooth >= sell_threshold ? color.new(color.red, 90) : na, title="Sell Zone BG")

// Generate alerts
buy_signal = ta.crossunder(heaviness_smooth, buy_threshold)
sell_signal = ta.crossover(heaviness_smooth, sell_threshold)

// Plot buy/sell signals
plotshape(buy_signal, title="Buy Signal", location=location.bottom, color=color.green, style=shape.triangleup, size=size.small)
plotshape(sell_signal, title="Sell Signal", location=location.top, color=color.red, style=shape.triangledown, size=size.small)

// Create alerts
alertcondition(buy_signal, title="Heaviness Buy Alert", message="Heaviness % dropped below {{plot_0}}% - Potential Reversal Buy Zone")
alertcondition(sell_signal, title="Heaviness Sell Alert", message="Heaviness % rose above {{plot_0}}% - Potential Reversal Sell Zone")

// Display current values in a table
if barstate.islast
    var table info_table = table.new(position.top_right, 2, 4, bgcolor=color.white, border_width=1)
    table.cell(info_table, 0, 0, "Heaviness %", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 0, str.tostring(heaviness_smooth, "#.##") + "%", 
               text_color=heaviness_smooth <= buy_threshold ? color.green : 
                         heaviness_smooth >= sell_threshold ? color.red : color.black, 
               text_size=size.small)
    
    table.cell(info_table, 0, 1, "RSI", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 1, str.tostring(rsi, "#.##"), text_color=color.black, text_size=size.small)
    
    table.cell(info_table, 0, 2, "Vol Ratio", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 2, str.tostring(volume_ratio, "#.##") + "x", text_color=color.black, text_size=size.small)
    
    table.cell(info_table, 0, 3, "Signal", text_color=color.black, text_size=size.small)
    signal_text = heaviness_smooth <= buy_threshold ? "BUY ZONE" : 
                  heaviness_smooth >= sell_threshold ? "SELL ZONE" : "NEUTRAL"
    signal_color = heaviness_smooth <= buy_threshold ? color.green : 
                   heaviness_smooth >= sell_threshold ? color.red : color.gray
    table.cell(info_table, 1, 3, signal_text, text_color=signal_color, text_size=size.small)
